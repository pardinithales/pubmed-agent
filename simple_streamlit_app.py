import streamlit as st
import sys
import os
from pathlib import Path

# Configura√ß√µes da p√°gina
st.set_page_config(
    page_title="PubMed Agent (Vers√£o Simplificada)",
    page_icon="üîç",
    layout="wide"
)

# Configurar o caminho para o diret√≥rio raiz do projeto
root_dir = Path(__file__).resolve().parent
sys.path.append(str(root_dir))

st.title("üîç Assistente de Consultas PubMed (Vers√£o Simplificada)")
st.markdown("Esta √© uma vers√£o simplificada do aplicativo para debug. Utilize-a quando a vers√£o completa estiver com problemas.")

# Mostrar status das chaves de API
st.header("Status das Chaves de API")

api_keys = {
    "OPENAI_API_KEY": os.environ.get("OPENAI_API_KEY") or (st.secrets.get("OPENAI_API_KEY") if hasattr(st, "secrets") else None),
    "DEEPSEEK_API_KEY": os.environ.get("DEEPSEEK_API_KEY") or (st.secrets.get("DEEPSEEK_API_KEY") if hasattr(st, "secrets") else None),
    "ANTHROPIC_API_KEY": os.environ.get("ANTHROPIC_API_KEY") or (st.secrets.get("ANTHROPIC_API_KEY") if hasattr(st, "secrets") else None),
    "OPENROUTER_API_KEY": os.environ.get("OPENROUTER_API_KEY") or (st.secrets.get("OPENROUTER_API_KEY") if hasattr(st, "secrets") else None),
    "GEMINI_API_KEY": os.environ.get("GEMINI_API_KEY") or (st.secrets.get("GEMINI_API_KEY") if hasattr(st, "secrets") else None)
}

for key, value in api_keys.items():
    if value:
        st.success(f"{key}: ‚úÖ Configurada")
    else:
        st.error(f"{key}: ‚ùå N√£o configurada")

# Formul√°rio simplificado
st.header("Consulta PubMed Simplificada")

with st.form("picott_form_simple"):
    picott_text = st.text_area(
        "Digite sua pergunta cl√≠nica no formato PICOTT:",
        height=150,
        placeholder="P: Popula√ß√£o\nI: Interven√ß√£o\nC: Compara√ß√£o\nO: Desfecho (Outcome)\nT: Tipo de estudo\nT: Tempo"
    )
    
    submit_button = st.form_submit_button("Gerar Consulta")

# Processar quando o formul√°rio for enviado
if submit_button and picott_text:
    st.header("Consulta Gerada")
    
    # Simula√ß√£o de consulta para demonstra√ß√£o
    st.code(f"""
    ((Popula√ß√£o OR seu sin√¥nimo OR outro termo) 
    AND 
    (Interven√ß√£o OR seu sin√¥nimo OR outro termo))
    
    Sua consulta original:
    {picott_text}
    """)
    
    st.info("Este √© apenas um exemplo de consulta. Na vers√£o completa do aplicativo, a consulta seria gerada por um modelo de IA.")
    
    # Explica√ß√£o sobre a vers√£o simplificada
    st.header("Por que estou vendo a vers√£o simplificada?")
    st.markdown("""
    Esta vers√£o simplificada foi criada para ajudar a diagnosticar problemas no deploy da vers√£o completa do aplicativo.
    
    Poss√≠veis raz√µes para problemas no deploy:
    1. **Configura√ß√£o de chaves de API:** Verifique se todas as chaves necess√°rias est√£o configuradas no Streamlit Cloud.
    2. **Problemas de importa√ß√£o:** Pode haver erros ao importar m√≥dulos espec√≠ficos.
    3. **Timeout de requisi√ß√µes:** A gera√ß√£o da consulta pode estar excedendo o tempo limite.
    
    Para resolver:
    1. Acesse o painel de controle do Streamlit Cloud e verifique as secrets.
    2. Verifique os logs para identificar erros espec√≠ficos.
    3. Se necess√°rio, ajuste o c√≥digo para torn√°-lo mais simples e robusto.
    """)

# Link para a p√°gina de debug
st.markdown("---")
st.markdown("[Acessar Diagn√≥stico de Deploy](debug_deploy) | [Acessar Teste B√°sico](test_deploy)") 